Gwuacamohli
Clara Mohri
Wenting Li
Jessica Wu
pd 08
---------------------
Mathematical Utility

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Being able to take a String input and convert it into something that the computer can understand and input x values into.
  This took creating the class Parser, which would convert a String into an array and then an ArrayList. Then, it would identify coefficients, degrees, and other useful parts to evaluate each term. Identifying key components of every term allowed us to divide it into mathematical parts that could actually yield values.
- Being able to take (x, y) coordinates in the conventional axes and converting them into something that can be plotted on a 2D array. This took a lot of time writing on KtS's until the problem was actually resolved. This way, we could have negative x and y values for our graph.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- We were unable to implement PEMDAS into Calculator, and instead remain on simple calculations that do not follow PEMDAS rules. 
- If we had more time, we would have added a functionality to Spreadsheet in which you could name rows and columns, and still do statistics for the rows and columns.
- The graph does not show x and y axes. Rather, it only has the values on the bottom and left.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Somehow, saying String.split(" + ") also splits based on the " - " (subtraction) sign. Despite consulting the Java API for the split method, there seems to be no explanation for this.
- Learned how to overwrite/create a file in Java to the same directory. Would have liked to learn how to overwrite/create into a specific directory like Downloads, which would have made more sense.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- No substantial mid-development design changes were made. We realized that some of the mathematical parts that we had set out to achieve were a lot, and instead focused on basic functionality.

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Dividing and conquering can be very helpful in making big projects. What we did was we divided up Grapher/Table, Calculator, and Spreadsheet. Then we helped each other out by reviewing the code of each and working together on each class. This process worked very well for writing a lot of code.
- Testing code out on many different computers is good at finding errors. For example, one computer that we tested on had difficulty downloading a file with spaces in the name. This prompted us to remove whitespace from the equation attribute of Grapher, which in the long run made the code more robust and consistent in more than just one way. Previously, sometimes graphs would come out differently based on spaces.

 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


2018-01-03
--------------------------------------------------------------
Clara :: Created Grapher. Several overloaded methods allow the user to choose the degree of the equation to be graphed, and then input coefficients for each degree. Limitted to adding polynomials, and domain/range cannot be changed.
Wenting :: Created proposal
Jessica :: 
==============================================================

2018-01-05
--------------------------------------------------------------
Clara :: Created Splitter (now Parser). It is able to split a polynomial equation based on plus signs. It can identify coefficients, degrees, and whether a term has an "x" value, once separated from the rest of the equation. 
Wenting :: Created Spreadsheet
Jessica :: Created Calculator
==============================================================

2018-01-08
--------------------------------------------------------------
Clara :: 
Wenting :: Updated Instructions for README.md
Jessica :: Created Calculator template 
==============================================================

2018-01-09
--------------------------------------------------------------
Clara :: Changed name of Splitter.java to Parser.java
         Parser.java was improved so that now any String equation can be evaluated for any x.
         However, it is only limited to polynomials that only add their terms
Wenting :: Began creating the skeleton for Spreadsheet.java 
            Wrote codes for the constructor, newTable() (helper function to initialize any Spreadsheet), toString()
            Augmented Spreadsheet such that user is now able to fill in the generated table
Jessica :: Utilized Parser methods in Calculator
==============================================================

2018-01-10
--------------------------------------------------------------
Clara :: Implemented Parser in Grapher so that Grapher now takes a String input for a polynomial
          Updated user interface so that it is in compliance with new functionality.
          Augmented Parser so that it can also take into consideration subtraction vs. addition
          Implemented this augmentation in Grapher, so that polynomials with negative signs can also be graphed
Wenting :: Augmented user experience through incorporating texts and directions in Spreadsheet to guide the user
            Augmented Spreadsheet so that it can now offer functionalities such setting or removing a value at a slot and adding a row/column
Jessica :: 
==============================================================

2018-01-11
--------------------------------------------------------------
Clara :: Worked on improving range/domain for Grapher.java, but it still needs to become functional.
Wenting :: 
Jessica :: Created a parsing method specific for Calculator's needs instead of using Parser's. Created method to find base number to evaluate exponents. Fixed issues with spaces in user input. Calculator can evaluate basic mathematical expressions, even on doubles (but doesn't follow rules of PEMDAS) & takes in user input.
==============================================================

2018-01-12
--------------------------------------------------------------
Clara :: Created Table.java, and some methods: constructor, fillOut(), toString(), and main. Considering making a superclass Function that contains both Grapher and Table as subclasses.
Wenting :: Updated README.md and UML.pdf to current code for Spreadsheet. 
Jessica :: Calculator now has a while loop to keep it running (allows user to calculate more than one expression)
==============================================================

2018-01-13
--------------------------------------------------------------
Clara :: Figured out how to properly graph on Grapher.java. The domain and range can now have negative numbers. 
         Fixed the toString() method for Grapher in compliance with these improvements.
Wenting :: Improved the menus displayed in the terminal when selecting a function for Spreadsheet for user experience.
	   Created all corresponding methods for each function and updated old functions to comply with variable name changes.
Jessica :: 

==============================================================

2018-01-14
--------------------------------------------------------------
Clara :: Improved Table.java: the domain can be set, and it has a driver method that allows the user to interract with a  Table. 
         Grapher class now has a driver method that allows the user to interact fully with a Grapher. 
      	 A Table and Grapher can both be downloaded now.   
	 The range and domain can be altered by the user, with setXmin(), setXmax(), setYmin(), set Ymax().
	 Methods for Grapher now calculate the x- and y-intercepts.      
Wenting :: Attached explanatory comments to each method and its variables.
	   Finetuned SOP outputs to be consistent and explanatory in the terminal for user experience.
	   Created input() in Parser.java that sorts any String input into an int, double, or String output.
	   
Jessica :: 

==============================================================

2018-01-15
--------------------------------------------------------------
Clara :: Worked on making code more robust; took into consideration user inputs that would not work. 
Wenting :: Completed code for calculating statistics in mean(), median(), mode(). Debugged such that both int and double values can be in said calculations.
	   Added the remove row, remove column, and sort data functionality to Spreadsheet.
	   Spreadsheet is now a working file with each method completely. Now awaiting more testing...
Jessica :: Added try/catch block to deal with invalid math expressions. Wrote while loop in case user attempts to select an invalid option (input a number other than 1 or 2). However, still need to figure out what to do if user tries to input something other than an int (the Error reading int data, MIN_VALUE value returned. error).

==============================================================


2018-01-16
--------------------------------------------------------------
Clara :: Worked on making code more robust, updated toString() method for Spreadsheet. Fixed an error in Grapher; now, equations are stripped of white space to have more robust and consistent code. Tested code on Java 8, and it worked.
Wenting :: 
Jessica :: 
==============================================================
